---
import Layout from '../layouts/Layout.astro';

const token = Astro.url.searchParams.get('token');
if (!token) {
  return Astro.redirect('/forgot-password');
}
---

<Layout title="Reset Password">
  <div class="max-w-md mx-auto mt-8">
    <div class="bg-white dark:bg-gray-800 p-8 rounded-lg shadow-md">
      <h1 class="text-2xl font-bold mb-6 text-gray-900 dark:text-white">Set New Password</h1>
      <form id="resetForm" class="space-y-4">
        <div id="errorMessage" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
          <span class="message">Error message here</span>
        </div>
        <div id="successMessage" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative" role="alert">
          <span class="message">Success message here</span>
        </div>
        <input type="hidden" id="token" value={token} />
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700 dark:text-gray-300">New Password</label>
          <input
            type="password"
            id="password"
            name="password"
            required
            minlength="8"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          />
        </div>
        <div>
          <label for="confirmPassword" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Confirm New Password</label>
          <input
            type="password"
            id="confirmPassword"
            name="confirmPassword"
            required
            minlength="8"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white"
          />
        </div>
        <button
          type="submit"
          class="w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        >
          Reset Password
        </button>
      </form>
    </div>
  </div>
</Layout>

<script>
  import { resetPassword } from '../lib/authClient';

  const form = document.getElementById('resetForm') as HTMLFormElement;
  const errorDiv = document.getElementById('errorMessage')!;
  const errorMessage = errorDiv.querySelector('.message')!;
  const successDiv = document.getElementById('successMessage')!;
  const successMessage = successDiv.querySelector('.message')!;
  const token = document.getElementById('token') as HTMLInputElement;
  const password = document.getElementById('password') as HTMLInputElement;
  const confirmPassword = document.getElementById('confirmPassword') as HTMLInputElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    if (password.value !== confirmPassword.value) {
      errorDiv.classList.remove('hidden');
      errorMessage.textContent = 'Passwords do not match!';
      return;
    }

    try {
      errorDiv.classList.add('hidden');
      successDiv.classList.add('hidden');
      
      await resetPassword(token.value, password.value);
      
      successDiv.classList.remove('hidden');
      successMessage.textContent = 'Password has been reset successfully. You can now login with your new password.';
      
      // Redirect to login page after 3 seconds
      setTimeout(() => {
        window.location.href = '/login';
      }, 3000);
    } catch (error) {
      errorDiv.classList.remove('hidden');
      errorMessage.textContent = error instanceof Error ? error.message : 'An error occurred';
    }
  });
</script> 